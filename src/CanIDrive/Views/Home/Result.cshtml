@model CanIDrive.Models.Home.ResultModel
@{
    ViewBag.Title = "Result";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>
<div id="results">
    <canvas width=440 height=140 id="gaugecanvas"></canvas>
    <div id="confidenceresults">@Model.Confidence</div>
    @if (Model.Drunk)
    {
        <p>Are you kidding me? You should not be driving!! your confidence level: @Model.Confidence</p>
    }
    else
    {
        <p>Well done - you seem sober!! your confidence level: @Model.Confidence</p>
    }
</div>
@section scripts 
{
    <script src="~/js/gauge.min.js"></script>
    <script>
        var opts =
            {
              lines: 100, // The number of lines to draw
              angle: 0, // The length of each line
              lineWidth: 0.38, // The line thickness
              //pointer:
              //  {
              //  length: 1, // The radius of the inner circle
              //  strokeWidth: 0.086, // The rotation offset
              //  color:
              //      '#000000' // Fill color
              //  },
              limitMax: 'true',   // If true, the pointer will not go past the end of the gauge
              @if (Model.Drunk)
              {
                  colorStart: '#CF5374',   // Colors
                  colorStop: '#DA0B0B',    // just experiment with them
                  strokeColor: '#87E060',   // to see which ones work best for you
                }
              else
              {
                  colorStart: '#87E060',   // Colors
                  colorStop: '#87E060',    // just experiment with them
                  strokeColor: '#CF5374',   // to see which ones work best for you
              }
              generateGradient:
              true
            };
        var target = document.getElementById('gaugecanvas'); // your canvas element
        var gauge = new Gauge(target).setOptions(opts); // create sexy gauge!
        gauge.maxValue = 100; // set max gauge value
        gauge.animationSpeed = 66; // set animation speed (32 is default value)
        gauge.set(@Model.Confidence*100); // set actual value
    </script>
}